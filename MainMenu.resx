<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="HelpButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAIdQTFRFAQAC
        ////AAAA+fn59fX1oaGh8PDw3t7evb297OzsV1dYtra22traz8/PgYGBnp6eMC8wHRwebGxs5ubmc3N0
        PT09JiYnExMUZ2dnREREqqqqiIiIx8fHODg4eHh4j4+PXFxcUlJSIyIjFRUWy8vLSEhIlpWWMzM0wsHC
        LCssoKChCwsMJSQmxYaYbgAADRpJREFUeF7dnQtX6roSgMvwlIcCgihsRXSLujn///fdpB2gj7zamYn1
        fmuds85xYZrPtskkmYSkI023Nx1t+/vVeD1/WGxOyWmzeJivx6t9fzua9rr4KTkkDW+Gk93jGtysH3eT
        4Q3+hgRShtPJ8mmDEokd/MTpaTmZ4m9yI2E4/Tc+ZTVHDx/Zh0+HvoQlt+Fg8pLVN9TuQvZbL5MBlsQF
        q+H9dqxriVVugv718fYey2OBz7A3ORD1MnQhh20PS6XDZThbsuhl6KKWMyyZCovh4G7O6KfRxc2PLJ0I
        g+EwbVuwanzoQl8YGley4Uw3LlgpblTJB/LDSjT8q0MWrI8EqvTnP3ithpAMZ7r1xLqIoe7jX7xeIwiG
        U8HnMw/xWW1sOFjF8dOoKy0bhzoNDbt38fw06mrHhgOtZoZ/vqP6aQC+v/Dq9Whi2FXxC143JupRbRLL
        NTCcxH1Ar6jrTrAONahtOHj8IT8NwGvtSK6u4df7DwpqxdMIaxJKTcPbH/XTqGAV6xJILcNh/Ca0CsDD
        EOsTRB3DUQv8NPUanBqG+5YIasUd1imAYMOeirLxAj8PwEdw1xhqeP/WIkGtuAidrgo0nJ3a5KeBU+B4
        I8ywLW1MntD2Jsiw30JBrXiH9XMSYqhGSlhou1AjKqyhiwDD9vQSZYJ6Db/hzwdqdkJCOK9hmwWDFH2G
        7X1EMwD2WFMbHsO2NjJXvM2N27Cd3UQRX6fhNGxjR1/F0/W7DGe/QlArugI4h+F962JRG5A4wnC7YW/x
        WwSV4rt9MGU3PPweQaX4gbWuYjXc/ZKXMMMRv9kMJ79KUCvaGlSL4fCXCWpFywycxfCBXxDK4M+5gDes
        ewmz4S3r5dEI1ofl7f54dzzuVq8f+DPGC1mCcKMhZyyjLTYfu8mssvw3HfUfF4ySAMYJf5PhzYZNUNV/
        vXNFHNN/rzqFET9OA06mZRuT4SuToKr5551/Bn7AlC6mLviKReYxGDJ1FPr2ha7aDtU4m+Gixi6jatjj
        +XMCvNZKoDhyOAJUo7eq4ZJH8KNugshAJ4/hrzcGlljalYrhH5Y/JWyxuDoMx+RrA1RejLJh95tD8LFh
        9gt90gS+y71S2fCOQ7DO8l6RGXkNtjJtUzIcMLwKb5SUyd4rsQYApeenZEhuZgAOxARmaq5HubEpGpJn
        ZgBusajmrGiVKM/aFA2p43qAFZZEQXUbWF4j4IDlZBQM/5LfgWp31ARa2AhQyEctGBJvoeolsCAiXdos
        X/Em5g2pnT08Y0FkpqSaAOQTp/OGz9RbyLfXZUtTzP+pc4YzqmBQpNa7D+pNPkiVyTenOUPaW+hvRqf9
        dLCr+dx/eTJ+af1W/k28GtKefee0s+J+h3IXlu7Q55FkCNfCr4YvxFvYx3JMDPSuKPwkon7w6hr/39Bu
        4nVW6mJIKzGBE5ZjYqieTvxcDuXoenNXJEO4TNlcDI80QfM8V4Z1WsTZgRLfxMsQ42I4pxk6ukJXVV1B
        EKnzgm8s5WJIjLkdz5tz3seVEUMaql7j77MhbdhUGZTlcPdsjuEybe3k8gKgIXGCzZHV4kt2gI21ZyQt
        nlz+6GhIjJLsC+k33iDanhAzptUJXxw0JMYz9t7e3+YD4Ecr9GmVwrgmM7wnPqTWNeaAgosjgTy04ep5
        IJAZbkmC1fmtCyENmPUlJi7T4mOaGZKeeMddCAqUYI2fLkOc+MPHNDWkFmVbYA5baa1O4p6hVittTVPD
        CakkVZSloQlLyYGNbbcWzTDJutrUkBTkakNdiIGwtWT73ADVMB2xpobUkmyGYWM8WNgCIpZ6acMprSCr
        YeCAzB61Ew2TdBysDamrMTbDwB67NIN7pUs21Jmn2pA+020+EmAdaGjrTYnzKvi304bkLEvzJFRgh23v
        a0bkeumJB2VI/lOpSppaw8C5eWMCRQpt2kGRTkgpQ2JvqDHNRgSOqR3zyNS3RxWuekRlyJCaYEiY7wZO
        i9jz0Af0HGU9SaIMn+iGSrE8jRG4lmsNSllyJuBJG/LkeJV2dnQD0yrgZF/r4Hi2VECYcKWSAjxdRxij
        wAkIV5Y9ccyaotvphKOhSQGA593X3+ns6/YzsHLOrI09R73UBZLOjskwdTyDP3FjSO+5wpR8tlOGpCWQ
        MuF6+rP2R5Q83kFUN5aExlbswMa1MEMPQ1JUU52Qw9tmALw5Tynh6MIUAN2E53mvi2p5nUukLM2MAqCX
        UAeHjQAYo4oZ4ipKDpgm5AC+Ab68G8bnCkYJcaq0Cd7UMKaXUAPbhDZ13gTvvlbO/gv6Cdc7HYw3K4WY
        uVcE9glPzxqOcz1cw3vSFqwS2oR+bdyBjBqUMB+DA+Mkbkhjn5TJGDA2MimwTmgZCjXJZ/KYuGHIoy8C
        8+S/iIY+QYG91fBfEnE/s+8R5YtkrsAi4dun5sN3B78EBNUIJuF/MCz4ugmZncdwUv/gfwvjO75C6AgO
        VWise2if2k45ygjqexjpPbSuE2eInfOj3sNIbalrVo05FC2g2lKBfekGHKc68EdqeeAhTkzjjEa7azlB
        HdNEiUuty7wKJYifkkDFpTHGFvaUIuE7qC49TmgJ7GHAAnWqdJ9FBRN4ScgLrQHYpy26n8KXh2OMeRrH
        Mi/3cLAC9GPMtdlOHSHvNAwAtjHmS63plRGO+YFRMoxgaJlc60WI+mEYY93CNi6M0MjpdQvifs0Acjt0
        isj/bdXQoptEaM425txDkTF9CXjqJBwpD27g2byQxnUMjgtYsq7jW9BJLQa6MUY16Tq+eHdhCbuZ1rHd
        wEgZih/NZpm/iLGsl+XTDN6lDc33MMaSELwPlCFx27QfWJtaGo6DcLzoqQVlKP3HhIVpEoojqcuLTu1N
        80tlr2WezI/zGmb5peKNmnGbd5TXEHOE6XneHkzbDaIkKp3zvIn7ugIwZOgxnEflJ83a0Ybiw/zqDkzi
        7v9A0tdDG8oPEcs5XrIziBfSJk4bir+I6lqFA8DuIwmmcum/eA9kNZL7Xth7qXWmMtnsSWoYI7cNAOaP
        u7vd8jk8x5ZItiSbGjKcQxdAmj+swf+XJr+HNMpgNDo4pskMI0zrxaewlztO9xSX4n58+bAmPuc0ZDT8
        /3tML7tV0DBGIIwtqQZ/IgkAhlFoKD+Y0WJPL8ftcaU7xAh/z/O+1rOh9CAR4GN0nhi+2cp/2+c1c+Bs
        SD1S0AMsCilfXfEvIbqOSS+GokMoWJcn9iXyEPPAP7zQ1VAycjPNJ/oPH6KQO7jqYig4wDAfXiJ6F3M7
        Oq6GYnPftrxSwUFUfnrvaigWflsPxRQ0zC0k5AyFOgx7JoZY41Z4anKGQmul9qNLxKa9C+t5eUOZd9+x
        y0loBbGYJ5g3lHkTHendrFuQrxSX8wqGIjfRkbUn00GVUj0LhiI30bEHQWaBvbQiWzSUaE5j38Ny91s0
        JB4mbCT2e1jOMSsZCmRIOY5QlsjArmwKKBkK9ML2JHaR+a/roAIpG/KPE61JXyLLwPCJhV+oGFK/AaKC
        fTuQQK6C4dixiiF/YwOJOa+Ndu6tGUOUXzXkn3YzpwxJfFXtZYItR9WQP2fQ+KUCA4HtSMYNgAZD/mxF
        gGV5mXsqsd/KeMS7yZD/zwvwXYhsuiLfaK5zvKqYDFm+e60EwNPo/I4M+u8igub40GgoERKnc963x7v9
        y39Cc96W80TMhh2RrSzaLAX/nxeYY91LWAyj5NWxYp0OshhGSTPnxL5T3GYoOZspQOlQwzxWw9+1LOzY
        wmk3jJJLzwS8mdYNMuyGnRvpBHA27GeeKxyGcfYLMOA+1cdl+EsaVOcBkx5DkSEcN76TtdyGUudxMAKV
        iZkSHsPWd4vew9+8hioIb7NiwDe7eg1brRjy1bV+wxY/qP5HVBFg2NrmxndsUUaIYUs7DfdXLl4IMmxl
        1+89gBEJM+xMWxejwsYVquUINOzcPLTqNgK82Y+rLxJqGHxSfhQADvbhUolgwzb1Go4RfZUahq1pb0Lb
        mIw6hp370K8EkARgHvoKptQybEMIFxKoFahp2Pmz+FFHgHfncNdAXcP065nxcvEBeDSvtjqobZg2OD/j
        qK5bp4lBGhh2unLHHLoAWAV3gjmaGKq3cR7dUTWh9uQqF80M0yXOmI7qandNbqCioaFqcdSjGstRXWlV
        u4U509hQjTdUpBrDUV1lbM9v9EIw7HRmERy1X+A4yQzJUDk+yTqq0tfmL1cMhmioHF/lHMn3T0M27HSG
        t6om/JK60Bf3Ie5BMBiqdvVODTpYJXVxn3eN2888LIaKmQpX2Rx1UUvy44lwGXY6vcmBRVIXctg6T/+u
        BZ+h4n6ruw+KpP718bbWCNcHq6FiMHnRtVRgnYPJfutlwvLy5eA21Ez7h1NWX6y8j+zDp0OfELpYkTDU
        TCfLp01Wc5cnfuL0tJxI2GmkDDU3w8nucY0SNtaPu8nQ+TV6RCQNM7q96Wjb36/G6/nDYnNKTpvFw3w9
        Xu3729G013BIFEyn8z+LyZjVtWaLrQAAAABJRU5ErkJggg==
</value>
  </data>
</root>