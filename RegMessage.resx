<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="NoButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAzUExURf///wAAAJ6enpycnKCgoKioqOHh4a6urubm5sjIyFdXVxQUFLq6ug8PDxcXF7u7u2Ji
        YlGbygQAAARtSURBVHhe7Z3bktowEESX7HInZP//a0NjuQyDAWOP5qLq85KsqmKpdWYs70v0RQghhBBC
        CCGEEEIIIYQQQgghhJB8bLbrffmrP/v1dlP+qsXusLpwPJUffTn9xWIOu/KjCrsznnnhTxnw5Lus5awZ
        8Wrwyk8Z8eNPWcnFYhlRYFMeCb7LmBe9QaDXi9vyxCu+hXobcLUtg8tZlyd2eFq8C7hal9Hl7MsTC34W
        7wOuFI+vY3lkwSuiCHgswxqcyjN7fCKKgKt/ZVyF4RXd4XFoyDUob/NPeWyP/etGGlTfZDmBdaEazC+L
        xNZidYPAZJInVO7BHj+LZptrtJMPGFaPT0TT9vCIaNz/crr6Ec1ntLZobBDYTunS+ZYfcA4GgV1neB1P
        DxPXsuhkEMiIdaa2meUJFuXjaBDUj+gcsH5Eiyp5gzw0dJfgbhDUPDQCGARyGXqHRgiDoNZCghgEdT7g
        whgENXY7kEGg34uhDAIZcemCtJ+ngG5RhTMINCMGNAjkvs+PqFsPimh9wIUs0Q4di2ENArm4OYdGYINg
        +fLq/q6iwNIPuOAGwbIuCt2DPUsWmcAgmB9R/sugAedHTFGiHfOWmqREO+YsNpFB8PmhkcogkAt+ZySZ
        QSCX/NpiOoNARny16PCfauNML7yUBsHUiJ/YDsa0iNNdB2RKfyU2CN4fGqkNgncB0r5kBl5HSHpM3PPq
        A64Bg+B5oabvwR4ZpLfYiEEgI3ZRxkeTMlaOTQUci9hYwMeIv+XPnrQvmQF5aNyT3iCQb85bGjAIZKEO
        NGEQPLPYiEEw3ovNGARjhdqQQfAYsSmDQJ6Dv2W8GZp32Hwfjp+IDVls/jwcNwgasdj8d2nzv1tIg839
        fih78GdkJDUyDow1FXE8jOzMxBHHDI6Np40oXzJDEGkx6evmVYwmLD43CBqw+KwHe9JbfG0QJLc4xVBq
        i+8NgsQWp9p516thmb7wpIU6rUQ7UhbqZ6WX0OInBkE6i58vOJnFTw2CVBY/68GeRBbnGATzNsaB+S5k
        oQa1uMRECotzS7QjQcSlS5xf4kYsMwiCHxoaRRa6UJcbBIEjai0tbC/qGARBe1Fz50MWqjS4bFEBI2r3
        TrhC1TUIglnUe8kMhIpYZzE1tm0mtZYSphfrlVOQQq1ZTCEiykXodkvdp0+i9uvA3WL9951zRBmwxvSu
        EesbBI6HhoVBYDXPAzYGgVOhWk5rt5k32E4qe/HT/yRtBta9YV6o9mVjHFFOZ9EXpnO6NL6lRZ+AhhGt
        XzIDRlvrZRCYfMD5GQQGs3saBLIX1Y9+w/fZEypvsbdBUHWTY9wlKyNq3vR+va59wMMgEBEV7wMWdzp7
        BXyIqHen8/293D4l2nH/PtC7l/vubnU/g+DOot7d6rf343saBLcW9e7H/zqUR3obBMMH3KGMaLA7l4d6
        GwR9oZ53ZUCF3dXiUfU289mcrpfZH1QDXths14oX7i9kv94q9iAhhBBCCCGEEEIIIYQQQgghhBBCbPj6
        +g9aXxkQ4NZ0+QAAAABJRU5ErkJggg==
</value>
  </data>
</root>